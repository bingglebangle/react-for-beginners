{"ast":null,"code":"var _jsxFileName = \"/Users/jin/Desktop/practice/react-for-beginners/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [toDo, setToDo] = useState(\"\");\n  const [toDos, setToDos] = useState([]);\n  const onChange = event => setToDo(event.target.value);\n  const onSubmit = event => {\n    event.preventDefault();\n    if (toDo === \"\") {\n      return;\n    }\n    setToDos(currentArray => [toDo, ...currentArray]);\n    // currrentArray 에 새로운 데이터 추가 + 기존 배열에 있는 데이터까지 합침\n    // 기존 데이터를 불러올 때는 ... 를 씀\n    setToDo(\"\"); // 직접적으로 수정\n  };\n  console.log(toDos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"My To Do Lists : (\", toDos.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChange,\n        value: toDo,\n        type: \"text\",\n        placeholder: \"write your to do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add to DO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), toDos.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"faKS3Ui8W1cTkHvLHwWsfZMXMFk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","toDo","setToDo","toDos","setToDos","onChange","event","target","value","onSubmit","preventDefault","currentArray","console","log","children","length","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","map","item","index","_c","$RefreshReg$"],"sources":["/Users/jin/Desktop/practice/react-for-beginners/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [toDo, setToDo] = useState(\"\");\n  const [toDos, setToDos] = useState([]);\n  const onChange = (event) => setToDo(event.target.value);\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (toDo === \"\") {\n      return;\n    }\n    setToDos((currentArray) => [toDo, ...currentArray]);\n    // currrentArray 에 새로운 데이터 추가 + 기존 배열에 있는 데이터까지 합침\n    // 기존 데이터를 불러올 때는 ... 를 씀\n    setToDo(\"\"); // 직접적으로 수정\n  };\n\n  console.log(toDos);\n\n  return (\n    <div>\n      <h1>My To Do Lists : ({toDos.length})</h1>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          value={toDo}\n          type=\"text\"\n          placeholder=\"write your to do\"\n        ></input>\n        <button>Add to DO</button>\n        <br></br>\n        <br></br>\n        {toDos.map((item, index) => (\n          <li key={index}>\n            {item}\n            <hr></hr>\n          </li>\n        ))}\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,QAAQ,GAAIC,KAAK,IAAKJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvD,MAAMC,QAAQ,GAAIH,KAAK,IAAK;IAC1BA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB,IAAIT,IAAI,KAAK,EAAE,EAAE;MACf;IACF;IACAG,QAAQ,CAAEO,YAAY,IAAK,CAACV,IAAI,EAAE,GAAGU,YAAY,CAAC,CAAC;IACnD;IACA;IACAT,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;EACf,CAAC;EAEDU,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;EAElB,oBACEL,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,GAAI,oBAAkB,EAACX,KAAK,CAACY,MAAM,EAAC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CrB,OAAA;MAAMW,QAAQ,EAAEA,QAAS;MAAAK,QAAA,gBACvBhB,OAAA;QACEO,QAAQ,EAAEA,QAAS;QACnBG,KAAK,EAAEP,IAAK;QACZmB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC;MAAkB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACTrB,OAAA;QAAAgB,QAAA,EAAQ;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1BrB,OAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTrB,OAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRhB,KAAK,CAACmB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB1B,OAAA;QAAAgB,QAAA,GACGS,IAAI,eACLzB,OAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFFK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACnB,EAAA,CAvCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}